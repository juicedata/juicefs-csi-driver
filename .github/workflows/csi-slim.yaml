name: build csi slim image

on:
  workflow_dispatch:
    inputs:
      ce_juicefs_build_version:
        description: 'ce juicefs version for image build'
        required: false
        type: string
      csi_build_version:
        description: 'csi version for image build'
        required: false
        type: string
  release:
    types:
      - created

jobs:
  publish-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login Docker Hub
        env:
          PASSWORD: ${{ secrets.DOCKERHUB_FUSE_ACCESS_TOKEN }}
        run: docker login --username chnliyong --password ${PASSWORD}
      - name: Confirm juicefs version
        env:
          JUICEFS_BUILD_VERSION: ${{ inputs.ce_juicefs_build_version }}
          CSI_BUILD_VERSION: ${{ inputs.csi_build_version }}
        run: |
          if [ ${{ env.JUICEFS_BUILD_VERSION }} ]; then
            echo "JUICEFS_CE_LATEST_VERSION=${{ env.JUICEFS_BUILD_VERSION }}" >> $GITHUB_ENV
          else
            JUICEFS_CE_LATEST_VERSION=$(curl -fsSL https://api.github.com/repos/juicedata/juicefs/releases/latest | grep tag_name | grep -oE 'v[0-9]+\.[0-9][0-9]*(\.[0-9]+(-[0-9a-z]+)?)?')
            echo "JUICEFS_CE_LATEST_VERSION=$JUICEFS_CE_LATEST_VERSION" >> $GITHUB_ENV
          fi
          
          JUICEFS_EE_LATEST_VERSION=$(curl -sSL https://juicefs.com/static/juicefs -o juicefs-ee && chmod +x juicefs-ee && ./juicefs-ee version | cut -d' ' -f3)
          echo "JUICEFS_EE_LATEST_VERSION=$JUICEFS_EE_LATEST_VERSION" >> $GITHUB_ENV
          
          if [ ${{ env.CSI_BUILD_VERSION }} ]; then
            echo "CSI_LATEST_VERSION=${{ env.CSI_BUILD_VERSION }}" >> $GITHUB_ENV
          else
            CSI_LATEST_VERSION=$(shell git describe --tags --match 'v*' --always --dirty)
            echo "CSI_LATEST_VERSION=$CSI_LATEST_VERSION" >> $GITHUB_ENV
          fi
      - name: Buildx and Push csi slim image
        env:
          CEVERSION: ce-${{ env.JUICEFS_CE_LATEST_VERSION }}
          CEJUICEFS_VERSION: ${{ env.JUICEFS_CE_LATEST_VERSION }}
          EEVERSION: ee-${{ env.JUICEFS_EE_LATEST_VERSION }}
          CSIVERSION: ${{ env.CSI_LATEST_VERSION }}
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker run --rm --privileged docker/binfmt:66f9012c56a8316f9244ffd7622d7c21c1f6f28d
          docker buildx create --use --name mybuilder
          make -C docker csi-slim-image-version
      - name: Setup upterm session
        if: ${{ failure() }}
        timeout-minutes: 60
        uses: lhotari/action-upterm@v1
